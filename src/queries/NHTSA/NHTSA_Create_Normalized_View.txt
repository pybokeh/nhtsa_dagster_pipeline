use database ipl_tv_db;
use schema vehicle_data_eval;

-- https://vpic.nhtsa.dot.gov/api/
create view vehicle_data_eval.vw_nhtsa_wide_pl as 
select
    lf.value:VIN::string as VIN
    , raw_json['Count'] as Count
    , array_size(raw_json['Results']) as array_count
    , lf.value:ABS::string as ABS
    , lf.value:ActiveSafetySysNote::string as ActiveSafetySysNote
    , lf.value:AdaptiveCruiseControl::string as AdaptiveCruiseControl
    , lf.value:AdaptiveDrivingBeam::string as AdaptiveDrivingBeam
    , lf.value:AdaptiveHeadlights::string as AdaptiveHeadlights
    , lf.value:AdditionalErrorText::string as AdditionalErrorText
    , lf.value:AirBagLocCurtain::string as AirBagLocCurtain
    , lf.value:AirBagLocFront::string as AirBagLocFront
    , lf.value:AirBagLocKnee::string as AirBagLocKnee
    , lf.value:AirBagLocSeatCushion::string as AirBagLocSeatCushion
    , lf.value:AirBagLocSide::string as AirBagLocSide
    , lf.value:AutoReverseSystem::string as AutoReverseSystem
    , lf.value:AutomaticPedestrianAlertingSound::string as AutomaticPedestrianAlertingSound
    , lf.value:Axles::string as Axles
    , lf.value:BasePrice::string as BasePrice
    , lf.value:BatteryA::string as BatteryA
    , lf.value:BatteryA_to::string as BatteryA_to
    , lf.value:BatteryCells::string as BatteryCells
    , lf.value:BatteryInfo::string as BatteryInfo
    , lf.value:BatteryKWh::string as BatteryKWh
    , lf.value:BatteryKWh_to::string as BatteryKWh_to
    , lf.value:BatteryModules::string as BatteryModules
    , lf.value:BatteryPacks::string as BatteryPacks
    , lf.value:BatteryType::string as BatteryType
    , lf.value:BatteryV::string as BatteryV
    , lf.value:BatteryV_to::string as BatteryV_to
    , lf.value:BedLengthIN::string as BedLengthIN
    , lf.value:BlindSpotIntervention::string as BlindSpotIntervention
    , lf.value:BlindSpotMon::string as BlindSpotMon
    , lf.value:BodyCabType::string as BodyCabType
    , lf.value:BodyClass::string as BodyClass
    , lf.value:BrakeSystemDesc::string as BrakeSystemDesc
    , lf.value:BrakeSystemType::string as BrakeSystemType
    , lf.value:BusFloorConfigType::string as BusFloorConfigType
    , lf.value:BusLength::string as BusLength
    , lf.value:CAN_AACN::string as CAN_AACN
    , lf.value:CIB::string as CIB
    , lf.value:CashForClunkers::string as CashForClunkers
    , lf.value:ChargerLevel::string as ChargerLevel
    , lf.value:ChargerPowerKW::string as ChargerPowerKW
    , lf.value:CoolingType::string as CoolingType
    , lf.value:CurbWeightLB::string as CurbWeightLB
    , lf.value:CustomMotorcycleType::string as CustomMotorcycleType
    , lf.value:DaytimeRunningLight::string as DaytimeRunningLight
    , lf.value:DestinationMarket::string as DestinationMarket
    , lf.value:DisplacementCC::string as DisplacementCC
    , lf.value:DisplacementCI::string as DisplacementCI
    , lf.value:DisplacementL::string as DisplacementL
    , lf.value:Doors::string as Doors
    , lf.value:DriveType::string as DriveType
    , lf.value:DriverAssist::string as DriverAssist
    , lf.value:DynamicBrakeSupport::string as DynamicBrakeSupport
    , lf.value:EDR::string as EDR
    , lf.value:ESC::string as ESC
    , lf.value:EVDriveUnit::string as EVDriveUnit
    , lf.value:ElectrificationLevel::string as ElectrificationLevel
    , lf.value:EngineConfiguration::string as EngineConfiguration
    , lf.value:EngineCycles::string as EngineCycles
    , lf.value:EngineCylinders::string as EngineCylinders
    , lf.value:EngineHP::string as EngineHP
    , lf.value:EngineHP_to::string as EngineHP_to
    , lf.value:EngineKW::string as EngineKW
    , lf.value:EngineManufacturer::string as EngineManufacturer
    , lf.value:EngineModel::string as EngineModel
    , lf.value:EntertainmentSystem::string as EntertainmentSystem
    , lf.value:ErrorCode::string as ErrorCode
    , lf.value:ErrorText::string as ErrorText
    , lf.value:ForwardCollisionWarning::string as ForwardCollisionWarning
    , lf.value:FuelInjectionType::string as FuelInjectionType
    , lf.value:FuelTypePrimary::string as FuelTypePrimary
    , lf.value:FuelTypeSecondary::string as FuelTypeSecondary
    , lf.value:GCWR::string as GCWR
    , lf.value:GCWR_to::string as GCWR_to
    , lf.value:GVWR::string as GVWR
    , lf.value:GVWR_to::string as GVWR_to
    , lf.value:KeylessIgnition::string as KeylessIgnition
    , lf.value:LaneCenteringAssistance::string as LaneCenteringAssistance
    , lf.value:LaneDepartureWarning::string as LaneDepartureWarning
    , lf.value:LaneKeepSystem::string as LaneKeepSystem
    , lf.value:LowerBeamHeadlampLightSource::string as LowerBeamHeadlampLightSource
    , lf.value:Make::string as Make
    , lf.value:MakeID::string as MakeID
    , lf.value:Manufacturer::string as Manufacturer
    , lf.value:ManufacturerId::string as ManufacturerId
    , lf.value:Model::string as Model
    , lf.value:ModelID::string as ModelID
    , lf.value:ModelYear::string as ModelYear
    , lf.value:MotorcycleChassisType::string as MotorcycleChassisType
    , lf.value:MotorcycleSuspensionType::string as MotorcycleSuspensionType
    , lf.value:NCSABodyType::string as NCSABodyType
    , lf.value:NCSAMake::string as NCSAMake
    , lf.value:NCSAMapExcApprovedBy::string as NCSAMapExcApprovedBy
    , lf.value:NCSAMapExcApprovedOn::string as NCSAMapExcApprovedOn
    , lf.value:NCSAMappingException::string as NCSAMappingException
    , lf.value:NCSAModel::string as NCSAModel
    , lf.value:NCSANote::string as NCSANote
    , lf.value:Note::string as Note
    , lf.value:OtherBusInfo::string as OtherBusInfo
    , lf.value:OtherEngineInfo::string as OtherEngineInfo
    , lf.value:OtherMotorcycleInfo::string as OtherMotorcycleInfo
    , lf.value:OtherRestraintSystemInfo::string as OtherRestraintSystemInfo
    , lf.value:OtherTrailerInfo::string as OtherTrailerInfo
    , lf.value:ParkAssist::string as ParkAssist
    , lf.value:PedestrianAutomaticEmergencyBraking::string as PedestrianAutomaticEmergencyBraking
    , lf.value:PlantCity::string as PlantCity
    , lf.value:PlantCompanyName::string as PlantCompanyName
    , lf.value:PlantCountry::string as PlantCountry
    , lf.value:PlantState::string as PlantState
    , lf.value:PossibleValues::string as PossibleValues
    , lf.value:Pretensioner::string as Pretensioner
    , lf.value:RearAutomaticEmergencyBraking::string as RearAutomaticEmergencyBraking
    , lf.value:RearCrossTrafficAlert::string as RearCrossTrafficAlert
    , lf.value:RearVisibilitySystem::string as RearVisibilitySystem
    , lf.value:SAEAutomationLevel::string as SAEAutomationLevel
    , lf.value:SAEAutomationLevel_to::string as SAEAutomationLevel_to
    , lf.value:SeatBeltsAll::string as SeatBeltsAll
    , lf.value:SeatRows::string as SeatRows
    , lf.value:Seats::string as Seats
    , lf.value:SemiautomaticHeadlampBeamSwitching::string as SemiautomaticHeadlampBeamSwitching
    , lf.value:Series::string as Series
    , lf.value:Series::string as Series2
    , lf.value:SteeringLocation::string as SteeringLocation
    , lf.value:SuggestedVIN::string as SuggestedVIN
    , lf.value:TPMS::string as TPMS
    , lf.value:TopSpeedMPH::string as TopSpeedMPH
    , lf.value:TrackWidth::string as TrackWidth
    , lf.value:TractionControl::string as TractionControl
    , lf.value:TrailerBodyType::string as TrailerBodyType
    , lf.value:TrailerLength::string as TrailerLength
    , lf.value:TrailerType::string as TrailerType
    , lf.value:TransmissionSpeeds::string as TransmissionSpeeds
    , lf.value:TransmissionStyle::string as TransmissionStyle
    , lf.value:Trim::string as Trim
    , lf.value:Trim2::string as Trim2
    , lf.value:Turbo::string as Turbo
    , lf.value:ValveTrainDesign::string as ValveTrainDesign
    , lf.value:VehicleType::string as VehicleType
    , lf.value:WheelBaseLong::string as WheelBaseLong
    , lf.value:WheelBaseShort::string as WheelBaseShort
    , lf.value:WheelBaseType::string as WheelBaseType
    , lf.value:WheelSizeFront::string as WheelSizeFront
    , lf.value:WheelSizeRear::string as WheelSizeRear
    , lf.value:Wheels::string as Wheels
    , lf.value:Windows::string as Windows
from
    vehicle_data_eval.nhtsa_raw_json_pl
    , lateral flatten(raw_json['Results']) as lf
;
